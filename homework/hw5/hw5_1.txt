I lowered the count to 100,000 because distributed counter 1 was taking a very long time to run. Counting to 100,000 the distributed counter averaged around 3.9 seconds, distributed counter 2 averaged around 0.036 seconds and distributed counter 3 averaged around 0.035 seconds. Obviously amdahls law is slowing down the first counter since each thread has to take ownership over the counter in order to increment it, so the programming is acting more sequential and can't take advantage of parallelism. Also potentially not taking advantage of the cache is slowing it down (since it has to keep loading the counter from main memory). However, much like on Mike's laptop, there isn't much of a difference between counter 2 and counter 3 in terms of performance. This suggests that on my machine false sharing isn't much of an issue (I'm assuming for the same reason as Mike's that my computer has just one CPU socket). I would not expect these results to be the same on other computers. Performance is dependent on a lot of things. A computer with more cores that allows for more threads would generally be faster (although maybe not so much for counter 1). A computer with more sockets that communicates through main memory would potentially work faster with distributed counter 3. Also the complier (though this isn't necessarily computer specific) seems like it makes a big difference as well.
